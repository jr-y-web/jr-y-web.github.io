import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.01af844e.js";const g=JSON.parse('{"title":"Vue 项目中如何在打包时清除 console 和 debugger","description":"","frontmatter":{},"headers":[],"relativePath":"web/vue/clearDebuggerAndLog.md","filePath":"web/vue/clearDebuggerAndLog.md"}'),o={name:"web/vue/clearDebuggerAndLog.md"},p=l(`<h1 id="vue-项目中如何在打包时清除-console-和-debugger" tabindex="-1">Vue 项目中如何在打包时清除 console 和 debugger <a class="header-anchor" href="#vue-项目中如何在打包时清除-console-和-debugger" aria-label="Permalink to &quot;Vue 项目中如何在打包时清除 console 和 debugger&quot;">​</a></h1><h2 id="vue-cli" tabindex="-1">Vue-cli <a class="header-anchor" href="#vue-cli" aria-label="Permalink to &quot;Vue-cli&quot;">​</a></h2><p>与 vue-cli2.0 使用了<code>uglifyjs-webpack-plugin</code> 或 <code>babel-plugin-transform-remove-console</code> 插件进行优化配置不同，vue-cli3.0 在打包过程中就使用了<code>terser-webpack-plugin</code>插件进行优化。</p><h2 id="vue-cli2-0" tabindex="-1">vue-cli2.0 <a class="header-anchor" href="#vue-cli2-0" aria-label="Permalink to &quot;vue-cli2.0&quot;">​</a></h2><ol><li>安装 <code>babel-plugin-transform-remove-console</code> 我们在开发过程中，肯定会用到 console 打印信息。但是呢，我们上线就要把 console 这些打印的信息给去掉吧，那时我们项目那么多打印，难道要一个个去掉吗，显然是不可能的；以下是解决方法</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install babel</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">plugin</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">transform</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">remove</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">console</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install babel</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">plugin</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">transform</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">remove</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">console</span></span></code></pre></div><ol start="2"><li>修改 <code>babel.config.js</code>（如果没有自己创建）</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> plugins </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p<wbr>rocess.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// todo  if判断是否打包,打包环境下控制台去掉console.log,也可去掉if判断，整个项目不会出现console.log(不建议)</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;transform-remove-console&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  presets: [</span><span style="color:#9ECBFF;">&quot;@vue/cli-plugin-babel/preset&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: plugins,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> plugins </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p<wbr>rocess.env.</span><span style="color:#005CC5;">NODE_ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// todo  if判断是否打包,打包环境下控制台去掉console.log,也可去掉if判断，整个项目不会出现console.log(不建议)</span></span>
<span class="line"><span style="color:#24292E;">  plugins.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;transform-remove-console&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  presets: [</span><span style="color:#032F62;">&quot;@vue/cli-plugin-babel/preset&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  plugins: plugins,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="vue-cli-3-0" tabindex="-1">vue-cli 3.0 <a class="header-anchor" href="#vue-cli-3-0" aria-label="Permalink to &quot;vue-cli 3.0&quot;">​</a></h2><p>在 <code>vue.config.js</code> 中的 <code>configureWebpack</code> 选项提供一个对象会被 webpack-merge 合并入最终的 webpack 配置，<code>vue.config.js</code> 配置如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">configureWebpack</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p<wbr>rocess.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    config.optimization.minimizer[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].options.terserOptions.compress.warnings </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    config.optimization.minimizer[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].options.terserOptions.compress.drop_console </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    config.optimization.minimizer[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].options.terserOptions.compress.drop_debugger </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    config.optimization.minimizer[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].options.terserOptions.compress.pure_funcs </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span><span style="color:#9ECBFF;">&quot;console.log&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">configureWebpack</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">config</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p<wbr>rocess.env.</span><span style="color:#005CC5;">NODE_ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    config.optimization.minimizer[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].options.terserOptions.compress.warnings </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    config.optimization.minimizer[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].options.terserOptions.compress.drop_console </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    config.optimization.minimizer[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].options.terserOptions.compress.drop_debugger </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    config.optimization.minimizer[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].options.terserOptions.compress.pure_funcs </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      [</span><span style="color:#032F62;">&quot;console.log&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>terser-webpack-plugin 是@vue/cli-service 的依赖包之一，所以不需要再次安装；</p></div><h2 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h2><p>在 vite 中已经内置了移除 console 的设置了，只需要配置一下就行了</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//vite.config.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vite&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@vitejs/plugin-vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span><span style="color:#B392F0;">vue</span><span style="color:#E1E4E8;">()],</span></span>
<span class="line"><span style="color:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    minify: </span><span style="color:#9ECBFF;">&quot;terser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    terserOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      compress: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">         * command 用来判断环境</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#E1E4E8;">        compress: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">//warnings: false,</span></span>
<span class="line"><span style="color:#E1E4E8;">          drop_console: command </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;serve&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          drop_debugger: command </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;serve&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">//pure_funcs:[&#39;console.log&#39;] // 移除console</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//vite.config.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vite&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@vitejs/plugin-vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span><span style="color:#6F42C1;">vue</span><span style="color:#24292E;">()],</span></span>
<span class="line"><span style="color:#24292E;">  build: {</span></span>
<span class="line"><span style="color:#24292E;">    minify: </span><span style="color:#032F62;">&quot;terser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    terserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">      compress: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">         * command 用来判断环境</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#24292E;">        compress: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">//warnings: false,</span></span>
<span class="line"><span style="color:#24292E;">          drop_console: command </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;serve&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          drop_debugger: command </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;serve&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">//pure_funcs:[&#39;console.log&#39;] // 移除console</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>`,15),e=[p];function c(t,r,i,E,y,u){return n(),a("div",null,e)}const m=s(o,[["render",c]]);export{g as __pageData,m as default};
